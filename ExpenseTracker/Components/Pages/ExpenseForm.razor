@using ExpenseTracker.Data.Models
@using Microsoft.AspNetCore.Components.Forms

<EditForm Model="Expense" OnValidSubmit="HandleValidSubmit" @formname="expenseForm">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <label for="title">Title</label>
        <InputText id="title" class="form-control" @bind-Value="Expense.Title" />
    </div>

    <div class="form-group">
        <label for="date">Date</label>
        <InputDate id="date" class="form-control" @bind-Value="Expense.Date" TValue="DateTime" />
    </div>

    <div class="form-group">
        <label for="amount">Amount</label>
        <InputNumber id="amount" class="form-control" @bind-Value="Expense.Amount" TValue="decimal" />
    </div>

    <div class="form-group">
        <label for="planned">Planned</label>
        <InputCheckbox id="planned" class="form-check-input" @bind-Value="Expense.Planned" />
    </div>

    <div class="form-group">
        <label for="category">Category</label>
        <select id="category" class="form-control" @bind="Expense.CategoryId">
            @if (Categories != null)
            {
                @foreach (var category in Categories)
                {
                    <option value="@category.Id">@category.Name</option>
                }
            }
        </select>
    </div>

    <button type="submit" class="btn btn-primary">Save</button>
</EditForm>

@code {
    [Parameter]
    public Expense Expense { get; set; }

    [Parameter]
    public IEnumerable<Category> Categories { get; set; }

    [Parameter]
    public EventCallback OnValidSubmit { get; set; }

    private async Task HandleValidSubmit()
    {
        await OnValidSubmit.InvokeAsync();
    }
}
